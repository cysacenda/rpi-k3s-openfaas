---
- hosts: all
  remote_user: pi
  become: True
  gather_facts: True
  
  tasks:
    - name: Install docker - Retrieve get-docker.sh
      shell: "curl -fsSL https://get.docker.com -o get-docker.sh"
    
    - name: Install docker - Modif
      shell: "sed -i 's/9)/10)/' get-docker.sh"
      
    - name: Install docker - Install
      shell: "sh get-docker.sh"

- hosts: k3s_rpi_master
  remote_user: pi
  become: True
  gather_facts: True
  

  tasks:
    - name: Install / upgrade k3s on master node
      # shell: "curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC=\"server --bind-address 0.0.0.0\" sh -"
      shell: "curl -sfL https://get.k3s.io | sh -s -"

    - name: Get token from master
      shell: "cat /var/lib/rancher/k3s/server/node-token"
      register: k3s_node_token

- hosts: k3s_rpi_worker
  remote_user: pi
  become: True
  gather_facts: True

  tasks:
    - set_fact:
        k3s_master_host: "{{ groups['k3s_rpi_master'][0] }}"

    - set_fact:
        k3s_master_token: "{{ hostvars[k3s_master_host]['k3s_node_token'].stdout }}"

    - name: Install / upgrade k3s on worker nodes and connect to master
      # shell: "curl -sfL https://get.k3s.io | K3S_URL=https://{{ master_node_ip }}:6443 K3S_TOKEN={{ k3s_master_token }} sh -"
      # see if something needs to be done to work with docker cf. https://bleemeo.com/blog/kubernetes-on-raspberry-pi-cluster-with-k3s
      # shell: "curl -sfL https://get.k3s.io | K3S_URL=https://{{ master_node_ip }}:6443 K3S_TOKEN={{ k3s_master_token }} sh -s - --docker --no-flannel"
      shell: "curl -sfL https://get.k3s.io | K3S_URL=https://{{ master_node_ip }}:6443 K3S_TOKEN={{ k3s_master_token }} sh -s -"
      
- hosts: all
  remote_user: pi
  become: True
  gather_facts: True
  
  tasks:   
    - name: Disable SWAP since kubernetes can't work with swap enabled (1/3)
      shell: |
        swapoff -a
    
    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/3)
      replace:
        path: /etc/fstab
        regexp: '^(.+?\sswap\s+sw\s+.*)$'
        replace: '# \1'
    
    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled (3/3)
      shell: "strace -eopenat kubectl version"

- hosts: k3s_rpi_master
  remote_user: pi
  become: True
  gather_facts: True

  tasks:
    - name: Make sure destination dir exists
      become: False
      file:
        path: /home/{{ rpi_username }}/kubedeployments
        state: directory

    - name: Copy dashboard admin file
      become: False
      copy:
        src: files/dashboard-admin.yaml 
        dest: /home/{{ rpi_username }}/kubedeployments/dashboard-admin.yaml
        owner: "{{ rpi_username }}"
        group: "{{ rpi_username }}"
        mode: '0644'

    - name: Apply dashboard admin
      shell: "k3s kubectl apply -f /home/{{ rpi_username }}/kubedeployments/dashboard-admin.yaml"

    - name: Install dashboard
      shell: "k3s kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.0-beta1/aio/deploy/recommended.yaml"

    - name: Get dashboard token
      shell: "k3s kubectl -n kube-system describe secret $(k3s kubectl -n kube-system get secret | grep admin-user | awk '{print $1}') | grep token: | cut -d':' -f2 | xargs"
      register: dashboard_token

    - debug:
        msg: "{{ dashboard_token.stdout }}"

    - name: Save dashboard token to credentials/dashboard_token
      become: False
      local_action: copy content={{ dashboard_token.stdout }} dest={{ playbook_dir }}/credentials/dashboard_token

    - name: Download kubernetes config
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ playbook_dir }}/credentials/k3s.yaml"
        flat: yes

    - name: Set correct IP in downloaded kubernetes config
      become: False
      local_action: 
        module: lineinfile
        dest: "{{ playbook_dir }}/credentials/k3s.yaml"
        regexp: "^    server"
        line: "    server: {{ jumphost_ip }}:6443"

    - name: Clone OpenFAAS kubernetes charts
      git:
        repo: https://github.com/openfaas/faas-netes.git
        dest: /home/{{ rpi_username }}/faas-netes

    - name: Install OpenFAAS
      shell: |
        k3s kubectl apply -f /home/{{ rpi_username }}/faas-netes/namespaces.yml
        k3s kubectl apply -f /home/{{ rpi_username }}/faas-netes/yaml_armhf

